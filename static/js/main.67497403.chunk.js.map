{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","navlink","to","activeClassName","active","Error404","error","Message","props","message","src","avatar","angel","content","name","text","time","messageData","HW1","messages","SuperButton","red","restProps","finalClassName","default","Affair","deleteAffairCallback","affair","afairName","parametr","priority","deleteButton","onClick","_id","deleteButtonn","Affairs","data","setFilter","mappedAffairs","map","a","filterButton","button","disabled","filter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","someClass","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","notError","Disabled","users","onKeyPressHandler","numberUsers","GreetingContainer","addUserCallback","setName","setError","length","match","alert","event","HW3","setUsers","console","log","user","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","PATH","Routes","path","exact","render","HW5","App","react","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.67497403.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1Alhk\",\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"content\":\"Message_content__Ltxgc\",\"angel\":\"Message_angel__3gg-m\",\"text\":\"Message_text__2fXBO\",\"name\":\"Message_name__Tzmp0\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"HW5_error__33i-O\",\"navlink\":\"HW5_navlink__2XRUa\",\"active\":\"HW5_active__2nBU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"users\":\"Greeting_users__2grNo\",\"button\":\"Greeting_button__24QRF\",\"notError\":\"Greeting_notError__1-UDC\",\"error\":\"Greeting_error__1uvQ8\",\"numberUsers\":\"Greeting_numberUsers__6UIMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW4\":\"HW4_HW4__32kcv\",\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\",\"react\":\"App_react__3Mqf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__l4fwN\",\"button\":\"Affairs_button__3YaQm\",\"parametr\":\"Affairs_parametr__2j9U2\",\"deleteButtonn\":\"Affairs_deleteButtonn__1FxUS\",\"affair\":\"Affairs_affair__179X1\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from \"./HW5.module.css\"\n\nfunction Header() {\n    return (\n        <div className={s.navlink} >\n            <ul className={s.navlink}>\n                <li> <NavLink to=\"junior\" activeClassName={s.active}>junior</NavLink></li>\n                <li> <NavLink to=\"junior+\" activeClassName={s.active}>junior3+</NavLink></li>\n                <li> <NavLink to=\"pre-junior\" activeClassName={s.active}>pre-junior</NavLink></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from \"./../HW5.module.css\"\n \nfunction Error404() {\n    return (\n        <div className={s.error}>\n            <div>404</div>\n            <div>Page not found!</div>\n            \n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype Style = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\nconst Message = (props: Style) => {\n    return (\n        <div className={s.message}>\n\n            <img src={props.avatar} className={s.avatar} />\n\n            <div className={s.angel} />\n\n            <div className={s.content}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react'\nimport Message from './Message'\nimport s from './Message.module.css'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div className={s.messages}>\n            <hr />\n            <h2>Homeworks 1</h2>\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            {/* <hr/>\n            для личного творчества, могу проверить\n            <AlternativeMessage/>\n            <hr/> */}\n        </div>\n    )\n}\n\nexport default HW1\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n\n\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './Affairs.module.css'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (_id: number) => void// need to fix any\n}\n\nfunction Affair({ deleteAffairCallback, affair, ...props }: AffairPropsType) {\n    const deleteCallback = (_id: number) => {\n        deleteAffairCallback(_id)\n    }// need to fix\n\n    return (\n        <div className={s.affair}>\n            <span className={s.afairName}>{affair.name}</span>\n            <span className={s.parametr}> {affair.priority}</span>\n            <span className={s.deleteButton}>\n                <SuperButton red onClick={() => deleteCallback(affair._id)} className={s.deleteButtonn}>X</SuperButton>\n            </span>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport { AffairPriorityType, AffairType, FilterType } from './HW2'\nimport s from './Affairs.module.css'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairPriorityType\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs({ data, setFilter, deleteAffairCallback, ...props }: AffairsPropsType) {\n    const mappedAffairs = data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => setFilter('all'); // need to fix\n    const setHigh = () => setFilter('high');\n    const setMiddle = () => setFilter('middle');\n    const setLow = () => setFilter('low');\n\n    return (\n        <div className={s.filterButton}>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll} className={s.button} disabled={props.filter === 'all'}>All</SuperButton>\n            <SuperButton onClick={setHigh} className={s.button} disabled={props.filter === 'high'}>High</SuperButton>\n            <SuperButton onClick={setMiddle} className={s.button} disabled={props.filter === 'middle'}>Middle</SuperButton>\n            <SuperButton onClick={setLow} className={s.button} disabled={props.filter === 'low'}>Low</SuperButton>\n            {/* <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button> */}\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, { useState } from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = Array<AffairType >// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | 'high' | 'low' | 'middle'\n\n// constants\nconst defaultAffairs: AffairPriorityType = [ // need to fix any\n    { _id: 1, name: 'React', priority: 'high' },\n    { _id: 2, name: 'anime', priority: 'low' },\n    { _id: 3, name: 'games', priority: 'low' },\n    { _id: 4, name: 'work', priority: 'high' },\n    { _id: 5, name: 'html & css', priority: 'middle' },\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairPriorityType, filter: FilterType): any => { // need to fix any\n    if (filter === 'all') return affairs\n    if (filter === 'high') return affairs.filter (a => a.priority === 'high')\n    if (filter === 'middle') return affairs.filter (a => a.priority === 'middle')\n    if (filter === 'low') return affairs.filter (a => a.priority === 'low')\n}\nexport const deleteAffair = (affairs: AffairPriorityType, _id: number): AffairPriorityType => { // need to fix any\n    let newAffairs = affairs.filter(a=> a._id !== _id)\n    return newAffairs\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairPriorityType>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div className={s.someClass}>\n            <hr />\n            <h2>Homeworks 2</h2>\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n            && e.key === 'Enter' // и если нажата кнопка Enter\n            && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <div>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <div>\n                {error && <span className={finalSpanClassName}>{error}</span>}\n            </div>\n        </div >\n    )\n}\n\nexport default SuperInputText\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers, ...props } // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.notError // need to fix with (?:)\n    const Disabled = error ? true : false\n\n    return (\n        <div className={s.users}>\n            {/* <input value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                onKeyPress={props.onKeyPressHandler} /> */}\n            <SuperInputText\n                error={error}\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                onKeyPress={props.onKeyPressHandler}\n            />\n            <SuperButton onClick={addUser} className={s.button} disabled={Disabled} >Add</SuperButton>\n\n            {/* <div className={s.error}>{error}</div> */}\n            <div className={s.numberUsers}>Number of users={totalUsers}</div>\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\n\nimport Greeting from './Greeting'\n\ntype GreetingContainerPropsType = {\n    users: any // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(event.currentTarget.value)\n        setError('')// need to fix\n    }\n    const addUser = () => {\n        if (name.length === 0) {\n            setError('Error: name not entered')\n        }\n        else if (name.match(' ')) {\n            setError(\"Error: forbidden symbol ' '\")\n        }\n\n        else {\n            alert(`Hello ${name}!`)\n            addUserCallback(name)\n            setName('')\n        }\n\n        // need to fix\n    }\n    const onKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>)=>{\n        if (e.key=== 'Enter') {\n            addUser();\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressHandler={onKeyPressHandler}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\nimport s from './Greeting.module.css'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n       const user:UserType = {_id:v1(),name:name}\n        setUsers([user,...users]) \n        // need to fix\n    }\n    console.log(users)\n    \n\n    return (\n        <div className={s.someClass}>\n            <hr/>\n            <h2>Homeworks 3</h2>\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n        else if (onChange){\n            onChange(e)\n        }\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, { ChangeEvent, useState } from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div className={s.HW4}>\n            <hr />\n            <h2>Homeworks 4</h2>\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange} />\n            </div>\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport Error404 from './pages/Error404'\nimport PreJunior from './pages/PreJunior'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                \n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\nimport HW5 from '../../../p2-homeworks/h5/HW5'\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div className={s.react}>React homeworks:</div>\n            {/* <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/> */}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}